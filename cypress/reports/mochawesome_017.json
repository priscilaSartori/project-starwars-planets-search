{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2022-11-29T01:14:33.927Z",
    "end": "2022-11-29T01:15:18.089Z",
    "duration": 44162,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d9a03ecf-f1ab-4912-b41d-c0c7f3e59c1e",
      "title": "",
      "fullFile": "cypress/e2e/09.sortPlanets.cy.js",
      "file": "cypress/e2e/09.sortPlanets.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6450fa07-9809-4711-ac3a-332e24c66dc6",
          "title": "9 - Ordene as colunas de forma ascendente ou descendente",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ordene os planetas do maior período orbital para o menor período orbital",
              "fullTitle": "9 - Ordene as colunas de forma ascendente ou descendente Ordene os planetas do maior período orbital para o menor período orbital",
              "timedOut": null,
              "duration": 10658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "sortByColumn('orbital_period', 'desc');\nconst expectedPlanets = ['Bespin', 'Yavin IV', 'Hoth', 'Kamino', 'Endor', 'Coruscant', 'Alderaan', 'Dagobah', 'Naboo', 'Tatooine'];\ncy.getByTestId(_dataTestIds.PLANET_NAME).each((el, index) => {\n  expect(el).to.contain(expectedPlanets[index]);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:131:63)",
                "diff": null
              },
              "uuid": "c2ce7149-9faa-4aac-aa15-9b02abbf1e3b",
              "parentUUID": "6450fa07-9809-4711-ac3a-332e24c66dc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ordene os planetas do menor diâmetro para o maior diâmetro",
              "fullTitle": "9 - Ordene as colunas de forma ascendente ou descendente Ordene os planetas do menor diâmetro para o maior diâmetro",
              "timedOut": null,
              "duration": 10198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "sortByColumn('diameter', 'asc');\nconst expectedPlanets = ['Endor', 'Hoth', 'Dagobah', 'Yavin IV', 'Tatooine', 'Naboo', 'Coruscant', 'Alderaan', 'Kamino', 'Bespin'];\ncy.getByTestId(_dataTestIds.PLANET_NAME).each((el, index) => {\n  expect(el).to.contain(expectedPlanets[index]);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:131:63)",
                "diff": null
              },
              "uuid": "d7ee6a5f-a82a-41b7-98a3-507d36c395ee",
              "parentUUID": "6450fa07-9809-4711-ac3a-332e24c66dc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ordene os planetas do mais populoso para o menos populoso",
              "fullTitle": "9 - Ordene as colunas de forma ascendente ou descendente Ordene os planetas do mais populoso para o menos populoso",
              "timedOut": null,
              "duration": 10222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "sortByColumn('population', 'desc');\nconst expectedPlanets = ['Coruscant', 'Naboo', 'Alderaan', 'Kamino', 'Endor', 'Bespin', 'Tatooine', 'Yavin IV'];\nconst expectedPlanetsWithUnknownValues = ['Dagobah', 'Hoth'];\ncy.getByTestId(_dataTestIds.PLANET_NAME).each((el, index) => {\n  if (expectedPlanets[index]) {\n    expect(el).to.contain(expectedPlanets[index]);\n  } else {\n    expect(el.text()).to.be.oneOf(expectedPlanetsWithUnknownValues);\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:131:63)",
                "diff": null
              },
              "uuid": "ca88d05a-ac39-452c-958b-504e2b2df60c",
              "parentUUID": "6450fa07-9809-4711-ac3a-332e24c66dc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ordene os planetas do menos populoso para o mais populoso",
              "fullTitle": "9 - Ordene as colunas de forma ascendente ou descendente Ordene os planetas do menos populoso para o mais populoso",
              "timedOut": null,
              "duration": 10267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "sortByColumn('population', 'asc');\nconst expectedPlanets = ['Yavin IV', 'Tatooine', 'Bespin', 'Endor', 'Kamino', 'Alderaan', 'Naboo', 'Coruscant'];\nconst expectedPlanetsWithUnknownValues = ['Dagobah', 'Hoth'];\ncy.getByTestId(_dataTestIds.PLANET_NAME).each((el, index) => {\n  if (expectedPlanets[index]) {\n    expect(el).to.contain(expectedPlanets[index]);\n  } else {\n    expect(el.text()).to.be.oneOf(expectedPlanetsWithUnknownValues);\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-sort\"]`, but never found it.\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/support/e2e.js:131:63)",
                "diff": null
              },
              "uuid": "636c48a3-28e2-4176-93fa-6713eb39f639",
              "parentUUID": "6450fa07-9809-4711-ac3a-332e24c66dc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c2ce7149-9faa-4aac-aa15-9b02abbf1e3b",
            "d7ee6a5f-a82a-41b7-98a3-507d36c395ee",
            "ca88d05a-ac39-452c-958b-504e2b2df60c",
            "636c48a3-28e2-4176-93fa-6713eb39f639"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}